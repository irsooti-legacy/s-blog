{"version":3,"sources":["../node_modules/moment/locale/cs.js"],"names":["moment","months","split","monthsShort","plural","n","translate","number","withoutSuffix","key","isFuture","result","defineLocale","monthsParse","i","_monthsParse","RegExp","shortMonthsParse","_shortMonthsParse","longMonthsParse","_longMonthsParse","weekdays","weekdaysShort","weekdaysMin","longDateFormat","LT","LTS","L","LL","LLL","LLLL","l","calendar","sameDay","nextDay","nextWeek","this","day","lastDay","lastWeek","sameElse","relativeTime","future","past","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","dayOfMonthOrdinalParse","ordinal","week","dow","doy","factory","__webpack_require__"],"mappings":"+EAKC,SAAAA,GACD,aAEA,IAAAC,EAAA,8HAAAC,MAAA,KACAC,EAAA,yFAAAD,MAAA,KAEA,SAAAE,EAAAC,GACA,OAAAA,EAAA,GAAAA,EAAA,UAAAA,EAAA,IAGA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAJ,EAAA,IAEA,OAAAE,GACA,QAEA,OAAAD,GAAAE,EAAA,mCAEA,SAEA,OAAAF,GAAAE,EACAC,GAAAP,EAAAG,GAAA,oBAEAI,EAAA,YAKA,QAEA,OAAAH,EAAA,SAAAE,EAAA,mBAEA,SAEA,OAAAF,GAAAE,EACAC,GAAAP,EAAAG,GAAA,kBAEAI,EAAA,WAKA,QAEA,OAAAH,EAAA,SAAAE,EAAA,mBAEA,SAEA,OAAAF,GAAAE,EACAC,GAAAP,EAAAG,GAAA,kBAEAI,EAAA,WAKA,QAEA,OAAAH,GAAAE,EAAA,aAEA,SAEA,OAAAF,GAAAE,EACAC,GAAAP,EAAAG,GAAA,gBAEAI,EAAA,MAKA,QAEA,OAAAH,GAAAE,EAAA,kCAEA,SAEA,OAAAF,GAAAE,EACAC,GAAAP,EAAAG,GAAA,wCAEAI,EAAA,iBAKA,QAEA,OAAAH,GAAAE,EAAA,cAEA,SAEA,OAAAF,GAAAE,EACAC,GAAAP,EAAAG,GAAA,cAEAI,EAAA,QAOAX,EAAAY,aAAA,MACAX,SACAE,cACAU,YAAA,SAAAZ,EAAAE,GACA,IAAAW,EACAC,EAAA,GAEA,IAAAD,EAAA,EAAiBA,EAAA,GAAQA,IAEzBC,EAAAD,GAAA,IAAAE,OAAA,IAAAf,EAAAa,GAAA,MAAAX,EAAAW,GAAA,SAGA,OAAAC,EATA,CAUKd,EAAAE,GACLc,iBAAA,SAAAd,GACA,IAAAW,EACAI,EAAA,GAEA,IAAAJ,EAAA,EAAiBA,EAAA,GAAQA,IACzBI,EAAAJ,GAAA,IAAAE,OAAA,IAAAb,EAAAW,GAAA,SAGA,OAAAI,EARA,CASKf,GACLgB,gBAAA,SAAAlB,GACA,IAAAa,EACAM,EAAA,GAEA,IAAAN,EAAA,EAAiBA,EAAA,GAAQA,IACzBM,EAAAN,GAAA,IAAAE,OAAA,IAAAf,EAAAa,GAAA,SAGA,OAAAM,EARA,CASKnB,GACLoB,SAAA,mFAAAnB,MAAA,KACAoB,cAAA,kCAAApB,MAAA,KACAqB,YAAA,kCAAArB,MAAA,KACAsB,eAAA,CACAC,GAAA,OACAC,IAAA,UACAC,EAAA,aACAC,GAAA,eACAC,IAAA,oBACAC,KAAA,yBACAC,EAAA,cAEAC,SAAA,CACAC,QAAA,cACAC,QAAA,kBACAC,SAAA,WACA,OAAAC,KAAAC,OACA,OACA,6BAEA,OACA,OACA,wBAEA,OACA,8BAEA,OACA,+BAEA,OACA,0BAEA,OACA,0BAGAC,QAAA,oBACAC,SAAA,WACA,OAAAH,KAAAC,OACA,OACA,mCAEA,OACA,OACA,gCAEA,OACA,mCAEA,OACA,OACA,gCAEA,OACA,gCAGAG,SAAA,KAEAC,aAAA,CACAC,OAAA,QACAC,KAAA,eACAC,EAAAtC,EACAuC,GAAAvC,EACAwC,EAAAxC,EACAyC,GAAAzC,EACA0C,EAAA1C,EACA2C,GAAA3C,EACA4C,EAAA5C,EACA6C,GAAA7C,EACA8C,EAAA9C,EACA+C,GAAA/C,EACAgD,EAAAhD,EACAiD,GAAAjD,GAEAkD,uBAAA,YACAC,QAAA,MACAC,KAAA,CACAC,IAAA,EAEAC,IAAA,KAxN+FC,CAAWC,EAAQ","file":"static/js/17.4f61f6d3.chunk.js","sourcesContent":["//! moment.js locale configuration\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' && typeof require === 'function' ? factory(require('../moment')) : typeof define === 'function' && define.amd ? define(['../moment'], factory) : factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),\n      monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');\n\n  function plural(n) {\n    return n > 1 && n < 5 && ~~(n / 10) !== 1;\n  }\n\n  function translate(number, withoutSuffix, key, isFuture) {\n    var result = number + ' ';\n\n    switch (key) {\n      case 's':\n        // a few seconds / in a few seconds / a few seconds ago\n        return withoutSuffix || isFuture ? 'pár sekund' : 'pár sekundami';\n\n      case 'ss':\n        // 9 seconds / in 9 seconds / 9 seconds ago\n        if (withoutSuffix || isFuture) {\n          return result + (plural(number) ? 'sekundy' : 'sekund');\n        } else {\n          return result + 'sekundami';\n        }\n\n        break;\n\n      case 'm':\n        // a minute / in a minute / a minute ago\n        return withoutSuffix ? 'minuta' : isFuture ? 'minutu' : 'minutou';\n\n      case 'mm':\n        // 9 minutes / in 9 minutes / 9 minutes ago\n        if (withoutSuffix || isFuture) {\n          return result + (plural(number) ? 'minuty' : 'minut');\n        } else {\n          return result + 'minutami';\n        }\n\n        break;\n\n      case 'h':\n        // an hour / in an hour / an hour ago\n        return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';\n\n      case 'hh':\n        // 9 hours / in 9 hours / 9 hours ago\n        if (withoutSuffix || isFuture) {\n          return result + (plural(number) ? 'hodiny' : 'hodin');\n        } else {\n          return result + 'hodinami';\n        }\n\n        break;\n\n      case 'd':\n        // a day / in a day / a day ago\n        return withoutSuffix || isFuture ? 'den' : 'dnem';\n\n      case 'dd':\n        // 9 days / in 9 days / 9 days ago\n        if (withoutSuffix || isFuture) {\n          return result + (plural(number) ? 'dny' : 'dní');\n        } else {\n          return result + 'dny';\n        }\n\n        break;\n\n      case 'M':\n        // a month / in a month / a month ago\n        return withoutSuffix || isFuture ? 'měsíc' : 'měsícem';\n\n      case 'MM':\n        // 9 months / in 9 months / 9 months ago\n        if (withoutSuffix || isFuture) {\n          return result + (plural(number) ? 'měsíce' : 'měsíců');\n        } else {\n          return result + 'měsíci';\n        }\n\n        break;\n\n      case 'y':\n        // a year / in a year / a year ago\n        return withoutSuffix || isFuture ? 'rok' : 'rokem';\n\n      case 'yy':\n        // 9 years / in 9 years / 9 years ago\n        if (withoutSuffix || isFuture) {\n          return result + (plural(number) ? 'roky' : 'let');\n        } else {\n          return result + 'lety';\n        }\n\n        break;\n    }\n  }\n\n  var cs = moment.defineLocale('cs', {\n    months: months,\n    monthsShort: monthsShort,\n    monthsParse: function (months, monthsShort) {\n      var i,\n          _monthsParse = [];\n\n      for (i = 0; i < 12; i++) {\n        // use custom parser to solve problem with July (červenec)\n        _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\n      }\n\n      return _monthsParse;\n    }(months, monthsShort),\n    shortMonthsParse: function (monthsShort) {\n      var i,\n          _shortMonthsParse = [];\n\n      for (i = 0; i < 12; i++) {\n        _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');\n      }\n\n      return _shortMonthsParse;\n    }(monthsShort),\n    longMonthsParse: function (months) {\n      var i,\n          _longMonthsParse = [];\n\n      for (i = 0; i < 12; i++) {\n        _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');\n      }\n\n      return _longMonthsParse;\n    }(months),\n    weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n    weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),\n    weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),\n    longDateFormat: {\n      LT: 'H:mm',\n      LTS: 'H:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D. MMMM YYYY',\n      LLL: 'D. MMMM YYYY H:mm',\n      LLLL: 'dddd D. MMMM YYYY H:mm',\n      l: 'D. M. YYYY'\n    },\n    calendar: {\n      sameDay: '[dnes v] LT',\n      nextDay: '[zítra v] LT',\n      nextWeek: function nextWeek() {\n        switch (this.day()) {\n          case 0:\n            return '[v neděli v] LT';\n\n          case 1:\n          case 2:\n            return '[v] dddd [v] LT';\n\n          case 3:\n            return '[ve středu v] LT';\n\n          case 4:\n            return '[ve čtvrtek v] LT';\n\n          case 5:\n            return '[v pátek v] LT';\n\n          case 6:\n            return '[v sobotu v] LT';\n        }\n      },\n      lastDay: '[včera v] LT',\n      lastWeek: function lastWeek() {\n        switch (this.day()) {\n          case 0:\n            return '[minulou neděli v] LT';\n\n          case 1:\n          case 2:\n            return '[minulé] dddd [v] LT';\n\n          case 3:\n            return '[minulou středu v] LT';\n\n          case 4:\n          case 5:\n            return '[minulý] dddd [v] LT';\n\n          case 6:\n            return '[minulou sobotu v] LT';\n        }\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'za %s',\n      past: 'před %s',\n      s: translate,\n      ss: translate,\n      m: translate,\n      mm: translate,\n      h: translate,\n      hh: translate,\n      d: translate,\n      dd: translate,\n      M: translate,\n      MM: translate,\n      y: translate,\n      yy: translate\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  });\n  return cs;\n});"],"sourceRoot":""}