{"version":3,"sources":["store/actions/actionTypes.js","store/actions/auth.js","containers/Toolbar/Toolbar.js","utils/common.js","containers/Login/Login.js","hoc/withAuthentication.js","store/actions/posts.js","containers/Home/Home.js","containers/Signup/Signup.js","containers/NewPost/NewPost.js","containers/App/App.js","utils/serviceWorker.js","store/reducers/common.js","utils/data.js","store/reducers/auth.js","store/reducers/posts.js","api/auth.js","store/sagas/auth.js","api/post.js","const/api.js","store/sagas/posts.js","store/sagas/index.js","store/config.js","index.js"],"names":["AUTHENTICATION_FLOW","VERIFYING_TOKEN_FLOW","ADD_POST_FLOW","RETRIEVE_POSTS_FLOW","beginAuthentication","email","password","type","actionTypes","payload","setAuthenticationStatus","isPending","authenticationFail","authenticationSuccess","user","tokenIsVerifying","isVerifing","tokenVerifiedSuccess","userInfo","tokenVerifiedFailure","err","arguments","length","undefined","Toolbar","state","showMobileNavbar","onBurgerButtonClick","evt","_this","setState","prevState","isBurgerBarFocused","console","log","this","props","match","react_default","a","createElement","className","role","aria-label","href","concat","aria-expanded","data-target","onClick","aria-hidden","id","NavLink","activeClassName","exact","to","Link","Component","withRouter","connect","auth","validateEmail","test","String","toLowerCase","Login","pass","userIsValid","handleCredential","propName","_state","Object","objectSpread","target","value","onEmailValidation","onAuthenticate","_this$state","authenticate","isAuthenticatingClasses","notAuthenticatedFragment","Fragment","class","style","marginTop","placeholder","onChange","authenticatedFragment","Redirect","pathname","isAuthenticated","dispatch","mapStateToProps","hoc_withAuthentication","WrappedComponent","_React$Component","_class2","_getPrototypeOf2","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","IsNotAuthenticatedFragment","from","location","inherits","createClass","key","React","withAuthentication","addPostSuccessfully","postIdRetrieved","addPostFailure","retrievePostError","addPostPendingStatus","addingPostIsPending","retrievePostsSuccess","posts","retrievePostsFailure","retrievePostsError","retrievePostsIsPending","Home","getAllPosts","map","post","title","parser","text","keys","all","i","warn","subKey","subI","push","postsToArray","postsLoadingStatus","Signup","NewPost","handleChangeArticle","handleChangeTitle","_ref","showIsPostingLoader","isLoading","addPostHandler","addPostFlow","errorMsg","toast","success","position","POSITION","BOTTOM_RIGHT","lib_default","App","refreshToken","localStorage","getItem","preAuthenticate","BrowserRouter","containers_Toolbar_Toolbar","Switch","Route","path","component","react_toastify_lib","token","Boolean","window","hostname","initialState","reducer","updateState","oldState","newState","action","postAuthentication","axios","returnSecureToken","then","data","catch","postVerifyToken","refresh_token","grant_type","_ref2","authenticationWorker","verifyTokenWorker","response","regenerator_default","wrap","_context","prev","next","put","sent","setItem","idToken","localId","t0","removeItem","finish","stop","_marked","_context2","Error","access_token","user_id","_marked2","addNewPost","config","params","name","get","addPostWorker","retrievePostsWorker","posts_marked","posts_marked2","rootSaga","takeLatest","t1","t2","t3","t4","t5","sagas_marked","composeEnhancers","compose","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","common","commmon","configureStore","store","createStore","applyMiddleware","thunk","logger","run","dotenv","load","process","ReactDOM","render","es","containers_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.633dfa58.chunk.js","sourcesContent":["export const AUTHENTICATION_FLOW = 'AUTHENTICATION_FLOW';\nexport const AUTHENTICATION_SUCCESS = 'AUTHENTICATION_SUCCESS';\nexport const AUTHENTICATION_FAIL = 'AUTHENTICATION_FAIL';\nexport const AUTHENTICATION_PENDING = 'AUTHENTICATION_PENDING';\n\nexport const VERIFYING_TOKEN_FLOW = 'VERIFYING_TOKEN_FLOW';\nexport const VERIFYING_TOKEN_PENDING = 'VERIFYING_TOKEN_PENDING';\nexport const TOKEN_INVALIDATE = 'TOKEN_INVALIDATE';\nexport const TOKEN_VALID = 'TOKEN_VALID';\n\nexport const ADD_POST_FLOW = 'ADD_POST_FLOW';\nexport const ADD_POST_PENDING = 'ADD_POST_PENDING';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const RETRIEVE_POSTS_FLOW = 'RETRIEVE_POSTS_FLOW';\nexport const RETRIEVE_POSTS_PENDING_STATUS = 'RETRIEVE_POSTS_PENDING_STATUS';\nexport const RETRIEVE_POSTS_SUCCESS = 'RETRIEVE_POSTS_SUCCESS';\nexport const RETRIEVE_POSTS_FAILURE = 'RETRIEVE_POSTS_FAILURE';\n","import * as actionTypes from './actionTypes';\n\nexport const beginAuthentication = (email, password) => {\n  return {\n    type: actionTypes.AUTHENTICATION_FLOW,\n    payload: {\n      email,\n      password\n    }\n  };\n};\n\nexport const setAuthenticationStatus = isPending => {\n  return {\n    type: actionTypes.AUTHENTICATION_PENDING,\n    payload: {\n      isPending\n    }\n  };\n};\n\nexport const authenticationFail = () => {\n  return {\n    type: actionTypes.AUTHENTICATION_FAIL\n  };\n};\n\nexport const authenticationSuccess = email => {\n  return {\n    type: actionTypes.AUTHENTICATION_SUCCESS,\n    payload: {\n      user: { email }\n    }\n  };\n};\n\nexport const beginVerifyToken = token => {\n  return {\n    type: actionTypes.VERIFYING_TOKEN_FLOW,\n    payload: {\n      token\n    }\n  };\n};\n\nexport const tokenIsVerifying = isVerifing => {\n  return {\n    type: actionTypes.VERIFYING_TOKEN_PENDING,\n    payload: {\n      isVerifing\n    }\n  };\n};\n\nexport const tokenVerifiedSuccess = userInfo => {\n  return {\n    type: actionTypes.TOKEN_VALID,\n    payload: {\n      userInfo\n    }\n  };\n};\n\nexport const tokenVerifiedFailure = (err = 'Generic error') => {\n  return {\n    type: actionTypes.TOKEN_INVALIDATE,\n    payload: { err }\n  };\n};\n","import React, { Component } from 'react';\nimport { Link, NavLink, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass Toolbar extends Component {\n  state = {\n    showMobileNavbar: false\n  };\n\n  onBurgerButtonClick = evt => {\n    this.setState(prevState => ({\n      showMobileNavbar: !prevState.showMobileNavbar\n    }));\n  };\n\n  isBurgerBarFocused = () => {\n    if (this.state.showMobileNavbar) {\n      return 'is-active';\n    } else {\n      return '';\n    }\n  };\n\n  componentDidUpdate() {\n    console.log(this.props.match)\n  }\n\n  render() {\n    const { match } = this.props;\n    console.log(match);\n    return (\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"https://bulma.io\">\n            <span className=\"is-bold\">SBLOG</span>\n          </a>\n\n          <div\n            className={`navbar-burger burger ${this.isBurgerBarFocused()}`}\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n            data-target=\"navbarBasicExample\"\n            onClick={this.onBurgerButtonClick}\n          >\n            <span aria-hidden=\"true\" />\n            <span aria-hidden=\"true\" />\n            <span aria-hidden=\"true\" />\n          </div>\n        </div>\n\n        <div\n          id=\"basicblogNavbar\"\n          className={`navbar-menu ${this.isBurgerBarFocused()}`}\n        >\n          <div className=\"navbar-start\">\n            <NavLink\n              className=\"navbar-item\"\n              activeClassName=\"is-active\"\n              exact \n              to=\"/\"\n            >\n              Home\n            </NavLink>\n            {this.props.user.email !== undefined ? (\n              <NavLink\n                className=\"navbar-item\"\n                activeClassName=\"is-active\"\n                to=\"/newpost\"\n              >\n                New post\n              </NavLink>\n            ) : null}\n          </div>\n\n          {this.props.user.email === undefined ? (\n            <div className=\"navbar-end\">\n              <div className=\"navbar-item\">\n                <div className=\"buttons\">\n                  <Link to=\"/signup\" className=\"button is-primary\">\n                    <strong>Sign up</strong>\n                  </Link>\n                  <Link className=\"button is-light\" to=\"/login\">\n                    Log in\n                  </Link>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"navbar-end\">\n              <div className=\"navbar-item\">\n                <div className=\"buttons\">\n                  <button className=\"button is-primary\">\n                    <span className=\"icon\">\n                      <i className=\"fas fa-user\" />\n                    </span>\n                    <span>{this.props.user.email}</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </nav>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(Toolbar));\n","export function validateEmail(email) {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { beginAuthentication } from '../../store/actions/auth';\nimport { validateEmail } from '../../utils/common';\nimport { Redirect } from 'react-router-dom';\n\nclass Login extends Component {\n  state = {\n    user: '',\n    pass: '',\n    userIsValid: false\n  };\n\n  handleCredential = propName => evt => {\n    let _state = { ...this.state };\n    _state[propName] = evt.target.value;\n\n    console.log(this.onEmailValidation(_state.user));\n    this.setState({ user: _state.user, pass: _state.pass });\n  };\n\n  onAuthenticate = () => {\n    const { user, pass } = this.state;\n    console.log(user, pass);\n    if (validateEmail(this.state.user)) this.props.authenticate(user, pass);\n  };\n\n  onEmailValidation = email => {\n    if (validateEmail(email)) {\n      this.setState({ userIsValid: true });\n      return true;\n    } else {\n      this.setState({ userIsValid: false });\n      return false;\n    }\n  };\n\n  render() {\n    let isAuthenticatingClasses = this.props.isPending ? 'is-loading' : '';\n    let notAuthenticatedFragment = (\n      <React.Fragment>\n        <section class=\"hero is-medium is-primary\">\n          <div class=\"hero-body\">\n            <div class=\"container\">\n              <h1 class=\"title\">Login</h1>\n              <h2 class=\"subtitle\">\n                Authenticate and <strong>start your stories</strong>\n              </h2>\n            </div>\n          </div>\n        </section>\n        <div style={{ marginTop: '1em' }} class=\"columns is-mobile\">\n          <div class=\"column is-3 is-offset-4\">\n            <div className=\"field\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  className=\"input\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  value={this.state.user}\n                  onChange={this.handleCredential('user')}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-envelope\" />\n                </span>\n                <span className=\"icon is-small is-right\">\n                  <i\n                    className={`fas ${\n                      this.state.userIsValid ? 'fa-check' : 'fa-times'\n                    }`}\n                  />\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  value={this.state.pass}\n                  placeholder=\"Password\"\n                  onChange={this.handleCredential('pass')}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\" />\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button\n                  onClick={this.onAuthenticate}\n                  className={`button is-success ${isAuthenticatingClasses}`}\n                >\n                  Login\n                </button>\n              </p>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n    let authenticatedFragment = (\n      <Redirect\n        to={{\n          pathname: '/'\n        }}\n      />\n    );\n\n    return !this.props.isAuthenticated\n      ? notAuthenticatedFragment\n      : authenticatedFragment;\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  authenticate: (user, pass) => dispatch(beginAuthentication(user, pass))\n});\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  isAuthenticated: state.auth.isAuthenticated,\n  isPending: state.auth.isPending\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nconst withAuthentication = WrappedComponent => {\n  return class extends React.Component {\n    IsNotAuthenticatedFragment = (\n      <Redirect\n        to={{\n          pathname: '/login',\n          state: { from: this.props.location }\n        }}\n      />\n    );\n    render() {\n      // ... and renders the wrapped component with the fresh data!\n      // Notice that we pass through any additional props\n      return (\n        <React.Fragment>\n          {this.props.isAuthenticated ? (\n            <WrappedComponent {...this.props} />\n          ) : (\n            this.IsNotAuthenticatedFragment\n          )}\n        </React.Fragment>\n      );\n    }\n  };\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default WrappedComponent =>\n  connect(mapStateToProps)(withAuthentication(WrappedComponent));\n","import * as actionTypes from './actionTypes';\n\nexport const addPostFlow = newPost => {\n  return {\n    type: actionTypes.ADD_POST_FLOW,\n    payload: newPost\n  };\n};\n\nexport const addPostSuccessfully = postIdRetrieved => {\n  return {\n    type: actionTypes.ADD_POST_SUCCESS,\n    payload: {\n      postIdRetrieved\n    }\n  };\n};\n\nexport const addPostFailure = retrievePostError => {\n  return {\n    type: actionTypes.ADD_POST_FAILURE,\n    payload: {\n      retrievePostError\n    }\n  };\n};\n\nexport const addPostPendingStatus = addingPostIsPending => {\n  return {\n    type: actionTypes.ADD_POST_PENDING,\n    payload: {\n      addingPostIsPending\n    }\n  };\n};\n\nexport const retrievePostsFlow = () => {\n  return {\n    type: actionTypes.RETRIEVE_POSTS_FLOW\n  };\n};\n\nexport const retrievePostsSuccess = posts => {\n  return {\n    type: actionTypes.RETRIEVE_POSTS_SUCCESS,\n    payload: {\n      posts\n    }\n  };\n};\n\nexport const retrievePostsFailure = retrievePostsError => {\n  return {\n    type: actionTypes.RETRIEVE_POSTS_FAILURE,\n    payload: {\n      retrievePostsError\n    }\n  };\n};\n\nexport const retrievePostsIsPending = isPending => {\n  return {\n    type: actionTypes.RETRIEVE_POSTS_PENDING_STATUS,\n    payload: {\n      isPending\n    }\n  };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { retrievePostsFlow } from '../../store/actions/posts';\nimport parser from 'html-react-parser';\nclass Home extends Component {\n  componentDidMount() {\n    this.props.getAllPosts();\n  }\n\n  render() {\n    return (\n      <>\n        <section className=\"hero is-link is-large\">\n          <div className=\"hero-body\">\n            <div className=\"container\">\n              <h1 className=\"title\">\n                <span className=\"has-text-weight-bold is-size-1\">\n                  SuperSimpliest blog\n                </span>\n                <br />\n                <span className=\"is-size-4 has-text-white\">in the world</span>\n              </h1>\n            </div>\n          </div>\n        </section>\n        <div className=\"container posts-distance\">\n          {this.props.posts.map(post => (\n            <div key={post.id}>\n              <h3 className=\"has-text-weight-bold has-text-dark is-size-2\">\n                {post.title}\n              </h3>\n              <article>{parser(post.text)}</article>\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  let postsToArray = () => {\n    let posts = [];\n    Object.keys(state.posts.all).map((key, i) => {\n      console.warn(state.posts.all[key]);\n      Object.keys(state.posts.all[key]).map((subKey, subI) => {\n        posts.push({\n          id: subKey,\n          text: state.posts.all[key][subKey].post.text,\n          title: state.posts.all[key][subKey].post.title\n        });\n        return true;\n      });\n      return true;\n    });\n    return posts;\n  };\n\n  return {\n    retrievePostError: state.posts.retrievePostError,\n    posts: postsToArray(),\n    postsLoadingStatus: state.posts.retrievePostsIsPending\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getAllPosts: () => dispatch(retrievePostsFlow())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { validateEmail } from '../../utils/common';\nimport { Redirect } from 'react-router-dom';\nimport { beginAuthentication } from '../../store/actions/auth';\n\n\nclass Signup extends Component {\n  state = {\n    user: '',\n    pass: '',\n    userIsValid: false\n  };\n\n  handleCredential = propName => evt => {\n    let _state = { ...this.state };\n    _state[propName] = evt.target.value;\n\n    console.log(this.onEmailValidation(_state.user));\n    this.setState({ user: _state.user, pass: _state.pass });\n  };\n\n  onAuthenticate = () => {\n    const { user, pass } = this.state;\n    console.log(user, pass);\n    if (validateEmail(this.state.user)) this.props.authenticate(user, pass);\n  };\n\n  onEmailValidation = email => {\n    if (validateEmail(email)) {\n      this.setState({ userIsValid: true });\n      return true;\n    } else {\n      this.setState({ userIsValid: false });\n      return false;\n    }\n  };\n\n  render() {\n    let isAuthenticatingClasses = this.props.isPending ? 'is-loading' : '';\n    let notAuthenticatedFragment = (\n      <React.Fragment>\n        <section class=\"hero is-medium is-info\">\n          <div class=\"hero-body\">\n            <div class=\"container\">\n              <h1 class=\"title\">Sign up</h1>\n              <h2 class=\"subtitle\">\n                Start <strong>your stories!</strong>\n              </h2>\n            </div>\n          </div>\n        </section>\n        <div style={{ marginTop: '1em' }} class=\"columns is-mobile\">\n          <div class=\"column is-3 is-offset-4\">\n            <div className=\"field\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  className=\"input\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  value={this.state.user}\n                  onChange={this.handleCredential('user')}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-envelope\" />\n                </span>\n                <span className=\"icon is-small is-right\">\n                  <i\n                    className={`fas ${\n                      this.state.userIsValid ? 'fa-check' : 'fa-times'\n                    }`}\n                  />\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  value={this.state.pass}\n                  placeholder=\"Password\"\n                  onChange={this.handleCredential('pass')}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\" />\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button\n                  onClick={this.onAuthenticate}\n                  className={`button is-success ${isAuthenticatingClasses}`}\n                >\n                  Login\n                </button>\n              </p>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n    let authenticatedFragment = (\n      <Redirect\n        to={{\n          pathname: '/'\n        }}\n      />\n    );\n\n    return !this.props.isAuthenticated\n      ? notAuthenticatedFragment\n      : authenticatedFragment;\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  authenticate: (user, pass) => dispatch(beginAuthentication(user, pass))\n});\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  isAuthenticated: state.auth.isAuthenticated,\n  isPending: state.auth.isPending\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Signup);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ReactQuill from 'react-quill'; // ES6\nimport 'react-quill/dist/quill.snow.css'; // ES6\nimport './NewPost.css';\nimport { addPostFlow } from '../../store/actions/posts';\nimport { toast } from 'react-toastify';\n\nclass NewPost extends Component {\n  state = {\n    text: '',\n    title: ''\n  };\n\n  componentDidUpdate() {\n    if (this.props.isLoading && this.props.errorMsg === '') {\n      toast.success('Post published! 🎉', {\n        position: toast.POSITION.BOTTOM_RIGHT\n      });\n    }\n  }\n\n  handleChangeArticle = value => {\n    this.setState({ text: value });\n  };\n\n  handleChangeTitle = ({ target }) => {\n    this.setState({ title: target.value });\n  };\n\n  showIsPostingLoader = () => {\n    if (this.props.isLoading) return 'is-loading';\n    return '';\n  };\n\n  addPostHandler = () => {\n    const { title, text } = this.state;\n    this.props.addPostFlow(title, text);\n  };\n\n  render() {\n    return (\n      <div className=\"new-post\">\n        <section className=\"hero is-light is-is-medium\">\n          <div className=\"hero-body\">\n            <div className=\"container\">\n              <h6>Your title will sucks anyway</h6>\n              <h1 className=\"title is-size-2\">\n                <input\n                  placeholder=\"Title\"\n                  className=\"input-title\"\n                  type=\"text\"\n                  onChange={this.handleChangeTitle}\n                  value={this.state.title}\n                />\n              </h1>\n            </div>\n          </div>\n        </section>\n        <div style={{ marginTop: '1em' }} className=\"columns is-mobile\">\n          <div className=\"column is-7 is-offset-1\">\n            <ReactQuill\n              value={this.state.text}\n              onChange={this.handleChangeArticle}\n            />\n          </div>\n          <div style={{ marginTop: '1em' }} className=\"column is-3\">\n            <button\n              onClick={this.addPostHandler}\n              className={\n                'button is-primary is-large is-fullwidth ' +\n                this.showIsPostingLoader()\n              }\n            >\n              Post it!\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoading: state.posts.addingPostIsPending,\n  errorMsg: state.posts.retrievePostError\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addPostFlow: (title, text) => dispatch(addPostFlow({ title, text }))\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NewPost);\n","import React, { Component } from 'react';\nimport style from './App.css';\nimport { connect } from 'react-redux';\nimport { beginVerifyToken } from '../../store/actions/auth';\nimport Toolbar from '../Toolbar/Toolbar';\nimport Login from '../Login/Login';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport withAuthentication from '../../hoc/withAuthentication';\nimport Home from '../Home/Home';\nimport Signup from '../Signup/Signup';\nimport NewPost from '../NewPost/NewPost';\nimport { toast, ToastContainer } from 'react-toastify';\n\nclass App extends Component {\n  state = {\n    isLoading: true\n  };\n\n  componentDidMount() {\n    let refreshToken = localStorage.getItem('refreshToken');\n    if (refreshToken) {\n      this.props.preAuthenticate(refreshToken);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.user !== null) {\n      toast.success('You are in bro! 💪', {\n        position: toast.POSITION.BOTTOM_RIGHT\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className={style.test}>\n          <Toolbar />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/login/\" component={Login} />\n            <Route path=\"/signup/\" component={Signup} />\n            <Route path=\"/newpost/\" component={withAuthentication(NewPost)} />\n          </Switch>\n          <ToastContainer />\n          <footer className=\"footer\" style={{marginTop: 10}}>\n            <div className=\"content has-text-centered\">\n              <p>\n                <strong>SBLOG</strong> by sto cazzo 💗\n              </p>\n            </div>\n          </footer>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  preAuthenticate: refreshToken => dispatch(beginVerifyToken(refreshToken))\n});\n\nconst mapStateToProps = state => ({\n  user: state.auth.user\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    isLoading: true\n}\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n    \n        default:\n            return state;\n    }\n}\n\nexport default reducer;","export const updateState = (oldState, newState) => {\n  return {\n    ...oldState,\n    ...newState\n  };\n};","import * as actionTypes from '../actions/actionTypes';\nimport { updateState } from '../../utils/data';\n\nconst initialState = {\n  isPending: false,\n  isAuthenticated: false,\n  user: {}\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    // case actionTypes.AUTHENTICATION_FLOW:\n    //   return updateState(state, {\n    //     credentials: {\n    //       email: action.payload.email,\n    //       password: action.payload.password\n    //     }\n    //   });\n    case actionTypes.AUTHENTICATION_SUCCESS:\n      return updateState(state, {\n        isAuthenticated: true,\n        user: {\n          ...state.user,\n          ...action.payload.user\n        }\n      });\n    case actionTypes.AUTHENTICATION_FAIL:\n      return updateState(state, {\n        isAuthenticated: false\n      });\n\n    case actionTypes.AUTHENTICATION_PENDING:\n      return updateState(state, { isPending: action.payload.isPending });\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateState } from '../../utils/data';\n\nconst initialState = {\n  addingPostIsPending: false,\n  retrievePostsIsPending: false,\n  postIdRetrieved: null,\n  retrievePostError: '',\n  all: {}\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_POST_PENDING:\n      return updateState(state, {\n        addingPostIsPending: action.payload.addingPostIsPending\n      });\n\n    case actionTypes.ADD_POST_SUCCESS:\n      return {\n        ...state,\n        postIdRetrieved: action.payload.postIdRetrieved,\n        retrievePostError: ''\n      };\n\n    case actionTypes.ADD_POST_FAILURE:\n      return updateState(state, {\n        retrievePostError: action.payload.retrievePostError\n      });\n\n    case actionTypes.RETRIEVE_POSTS_PENDING_STATUS:\n      return updateState(state, {\n        retrievePostsIsPending: action.payload.isPending\n      });\n\n    case actionTypes.RETRIEVE_POSTS_SUCCESS:\n      return updateState(state, {\n        all: action.payload.posts\n      });\n\n    case actionTypes.RETRIEVE_POSTS_FAILURE:\n      return updateState(state, {\n        retrievePostsError: action.payload.retrievePostsError\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import axios from 'axios';\nimport { FIREBASE_API_KEY } from '../const/api';\n\nexport const postAuthentication = (email, password) => {\n  return axios\n    .post(\n      'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=' +\n        FIREBASE_API_KEY,\n      { email, password, returnSecureToken: true }\n    )\n    .then(({ data }) => {\n      return data;\n    })\n    .catch(err => {\n      console.warn('Firebase auth failed', err);\n    });\n};\n\nexport const postVerifyToken = refreshToken => {\n  return axios\n    .post(\n      'https://securetoken.googleapis.com/v1/token?key=' + FIREBASE_API_KEY,\n      {\n        refresh_token: refreshToken,\n        grant_type: 'refresh_token'\n      }\n    )\n    .then(({ data }) => {\n      return data;\n    })\n    .catch(err => {\n      console.warn('Firebase re-auth failed', err)\n    });\n};\n","import { put, call } from 'redux-saga/effects';\nimport { postAuthentication, postVerifyToken } from '../../api/auth';\nimport * as auth from '../actions/auth';\n\nexport function* authenticationWorker(action) {\n  yield put(auth.setAuthenticationStatus(true));\n\n  try {\n    let response = yield call(\n      postAuthentication,\n      action.payload.email,\n      action.payload.password\n    );\n    yield localStorage.setItem('refreshToken', response.refreshToken);\n    yield localStorage.setItem('username', response.email);\n    yield localStorage.setItem('token', response.idToken);\n    yield localStorage.setItem('localId', response.localId);\n    yield put(auth.authenticationSuccess(response.email));\n  } catch (err) {\n    yield put(auth.authenticationFail());\n    yield localStorage.removeItem('refreshToken');\n    yield localStorage.removeItem('username');\n    yield localStorage.removeItem('token');\n    yield localStorage.removeItem('localId');\n  } finally {\n    yield put(auth.setAuthenticationStatus(false));\n  }\n}\n\nexport function* verifyTokenWorker(action) {\n  yield put(auth.tokenIsVerifying(true));\n\n  try {\n    let response = yield call(postVerifyToken, action.payload.token);\n    if (!localStorage.getItem('username')) {\n      throw new Error('Username misconfiguration');\n    }\n    yield localStorage.setItem('token', response.access_token);\n    yield localStorage.setItem('refreshToken', response.refresh_token);\n    yield localStorage.setItem('localId', response.user_id);\n\n    yield put(auth.authenticationSuccess(localStorage.getItem('username')));\n    yield put(auth.tokenVerifiedSuccess(response));\n  } catch (err) {\n    yield localStorage.removeItem('refreshToken');\n    yield localStorage.removeItem('username');\n    yield localStorage.removeItem('token');\n    yield localStorage.removeItem('localId');\n    yield put(auth.tokenVerifiedFailure());\n  } finally {\n    yield put(auth.tokenIsVerifying(false));\n  }\n}\n","import axios from 'axios';\nimport { FIREBASE_API_ENDPOINT } from '../const/api';\n\nexport const addNewPost = (token, localId, post) => {\n  const config = {\n    params: { auth: token }\n  };\n\n  return axios\n    .post(\n      `${FIREBASE_API_ENDPOINT}/posts/${localId}.json`,\n      {\n        post\n      },\n      config\n    )\n    .then(({ data }) => {\n      return data.name;\n    })\n    .catch(err => {\n      console.warn('Error at post ', err);\n      return err;\n    });\n};\n\nexport const getAllPosts = () => {\n  return axios\n    .get(`${FIREBASE_API_ENDPOINT}/posts.json`)\n    .then(({ data }) => data)\n    .catch(err => err);\n};\n","export const FIREBASE_API_KEY = 'AIzaSyAUe_5fJKIV0k5SAyqp9GO-FBgoLYleRvM';\nexport const FIREBASE_API_ENDPOINT = 'https://sblog-175ab.firebaseio.com';\n","import { put, call } from 'redux-saga/effects';\nimport {\n  addPostSuccessfully,\n  addPostPendingStatus,\n  addPostFailure,\n  retrievePostsIsPending,\n  retrievePostsFailure,\n  retrievePostsSuccess\n} from '../actions/posts';\nimport { addNewPost, getAllPosts } from '../../api/post';\n\nexport function* addPostWorker(action) {\n  yield put(addPostPendingStatus(true));\n  try {\n    // should be post name id\n\n    let token = localStorage.getItem('token');\n    let localId = localStorage.getItem('localId');\n    // const {text, title} = action.payload;\n    console.log(token);\n\n    let response = yield call(addNewPost, token, localId, action.payload);\n\n    console.log(response);\n\n    yield put(addPostSuccessfully(response));\n  } catch (err) {\n    yield put(addPostFailure('Generic error ' + err));\n  } finally {\n    yield put(addPostPendingStatus(false));\n  }\n}\n\nexport function* retrievePostsWorker() {\n  yield put(retrievePostsIsPending(true));\n\n  try {\n    let posts = yield call(getAllPosts);\n    yield put(retrievePostsSuccess(posts));\n  } catch (err) {\n    yield put(retrievePostsFailure(err));\n  } finally {\n    yield put(retrievePostsIsPending(false));\n  }\n}\n","import { all, takeLatest } from 'redux-saga/effects';\n\nimport { authenticationWorker, verifyTokenWorker } from './auth';\nimport * as actionTypes from '../actions/actionTypes';\nimport { addPostWorker, retrievePostsWorker } from './posts';\n\nexport function* rootSaga() {\n  yield all([\n    yield takeLatest(actionTypes.AUTHENTICATION_FLOW, authenticationWorker),\n    yield takeLatest(actionTypes.VERIFYING_TOKEN_FLOW, verifyTokenWorker),\n    yield takeLatest(actionTypes.ADD_POST_FLOW, addPostWorker),\n    yield takeLatest(actionTypes.RETRIEVE_POSTS_FLOW, retrievePostsWorker)\n  ]);\n}\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { auth, commmon, posts } from './reducers';\n\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { rootSaga } from './sagas';\n\nlet composeEnhancers = compose;\n\ncomposeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst sagaMiddleware = createSagaMiddleware();\nconst rootReducer = combineReducers({\n  common: commmon,\n  auth: auth,\n  posts\n});\n\nconst configureStore = () => {\n  const store = createStore(\n    rootReducer,\n    composeEnhancers(\n      applyMiddleware(thunk),\n      applyMiddleware(sagaMiddleware),\n      applyMiddleware(logger)\n    )\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n\nexport default configureStore;\n","import React from 'react';\nimport dotenv from 'dotenv';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport 'bulma/css/bulma.css';\nimport App from './containers/App/App';\nimport * as serviceWorker from './utils/serviceWorker';\nimport configureStore from './store/config';\n\ndotenv.load();\n\nconsole.log(process.env);\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}